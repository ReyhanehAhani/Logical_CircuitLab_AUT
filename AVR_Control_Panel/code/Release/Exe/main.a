;#include <mega16a.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <alcd.h>
;#include <delay.h>
;
;const char PASSWORD[] = { '1', '2', '3', '4' };
;const unsigned char digits[] = { 0x3f, 0x06, 0x5b, 0x4f, 0x66, 0x6d, 0x7d, 0x07, 0x7f, 0x67 };
;
;char get_key();
;unsigned char verify_password();
;
;unsigned char menu_number = 0, old_menu_number = 4, i = 0, n = 0, pass = 0, task = 0;
;unsigned int loop_count = 0, task_run = 0;
;bit t = 0, logged_in = 0;
;
;interrupt[EXT_INT0] void ext_int0_isr(void)
; 0000 0010 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0011 	if (logged_in == 0)
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 0012 		return;
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 0013 
; 0000 0014 	n++;
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 0015 	if (n > 99)
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0000 0016 		n = 0;
;PCODE: $00000019 VOL: 0
; 0000 0017 }
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;
;interrupt[EXT_INT1] void ext_int1_isr(void)
; 0000 001A {
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
; 0000 001B 	if (logged_in == 0)
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0000 001C 		return;
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0000 001D 
; 0000 001E 	n--;
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0000 001F 	if (n > 99)
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0000 0020 		n = 0;
;PCODE: $0000002A VOL: 0
; 0000 0021 }
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;
;void main(void)
; 0000 0024 {
;PCODE: $0000002F VOL: 0
; 0000 0025 	DDRC = 0x0F;
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 0026 	PORTC = 0b11110000;
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 0027 
; 0000 0028 	DDRD = 0b01110000;
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0000 0029 	PORTD = 0b00000011;
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0000 002A 
; 0000 002B 	DDRA = 0xFF;
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0000 002C 	DDRB.3 = 1;
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0000 002D 
; 0000 002E     //INT
; 0000 002F 	GICR |= (1 << INT1) | (1 << INT0) | (0 << INT2);
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0000 0030 	MCUCR = (1 << ISC11) | (1 << ISC10) | (1 << ISC01) | (0 << ISC00);
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0000 0031 	MCUCSR = (0 << ISC2);
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 0032 	GIFR = (1 << INTF1) | (1 << INTF0) | (0 << INTF2);
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0000 0033 	#asm("sei")
;PCODE: $00000045 VOL: 0
	sei
;PCODE: $00000046 VOL: 0
; 0000 0034 
; 0000 0035 	lcd_init(16);
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
; 0000 0036 
; 0000 0037 	while (1)
;PCODE: $00000049 VOL: 0
; 0000 0038 	{
; 0000 0039         lcd_clear();
;PCODE: $0000004A VOL: 0
; 0000 003A 		lcd_puts("Enter passwrod: ");
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0000 003B 
; 0000 003C         pass = verify_password();
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
; 0000 003D 
; 0000 003E         if(pass == 1)
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
; 0000 003F             break;
;PCODE: $00000053 VOL: 0
; 0000 0040 
; 0000 0041 		if (pass == 0)
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
; 0000 0042 		{
; 0000 0043 			lcd_clear();
;PCODE: $00000057 VOL: 0
; 0000 0044 			lcd_puts("INCORRECT PASSWORD");
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
; 0000 0045 			delay_ms(300);
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
; 0000 0046 		}
; 0000 0047 	}
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
; 0000 0048 
; 0000 0049 	lcd_clear();
;PCODE: $00000060 VOL: 0
; 0000 004A 	lcd_puts("Correct Password");
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
; 0000 004B 	delay_ms(300);
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
; 0000 004C 	lcd_clear();
;PCODE: $00000066 VOL: 0
; 0000 004D 
; 0000 004E 	logged_in = 1;
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
; 0000 004F 	menu_number = 1;
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
; 0000 0050 
; 0000 0051 	while (1)
;PCODE: $0000006C VOL: 0
; 0000 0052 	{
; 0000 0053 		if (t == 0)
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
; 0000 0054 		{
; 0000 0055 			PORTA = digits[n / 10];
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
; 0000 0056 			t = 1;
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
; 0000 0057 			PORTA.7 = 0;
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
; 0000 0058 			PORTB.3 = 1;
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
; 0000 0059 		}
; 0000 005A 		else if (t == 1)
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
; 0000 005B 		{
; 0000 005C 			PORTA = digits[n % 10];
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
; 0000 005D 			t = 0;
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
; 0000 005E 			PORTA.7 = 1;
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
; 0000 005F 			PORTB.3 = 0;
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
; 0000 0060 		}
; 0000 0061 
; 0000 0062 		if (old_menu_number != menu_number)
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
; 0000 0063 		{
; 0000 0064 			old_menu_number = menu_number;
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
; 0000 0065 			switch (menu_number)
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
; 0000 0066 			{
; 0000 0067 				case 1:
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
; 0000 0068 					lcd_clear();
;PCODE: $0000009C VOL: 0
; 0000 0069 					lcd_puts("1)LED<=\n2)Buzzer");
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
; 0000 006A 					break;
;PCODE: $000000A0 VOL: 0
; 0000 006B 				case 2:
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
; 0000 006C 					lcd_clear();
;PCODE: $000000A4 VOL: 0
; 0000 006D 					lcd_puts("1)LED\n2)Buzzer<=");
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
; 0000 006E 					break;
;PCODE: $000000A8 VOL: 0
; 0000 006F 				case 3:
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
; 0000 0070 					lcd_clear();
;PCODE: $000000AC VOL: 0
; 0000 0071 					lcd_puts("3)Relay<=");
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
; 0000 0072 					break;
;PCODE: $000000B0 VOL: 0
; 0000 0073 			}
;PCODE: $000000B1 VOL: 0
; 0000 0074 		}
; 0000 0075 
; 0000 0076 		if (PIND.0 == 0 && (loop_count % 15 == 0))
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
; 0000 0077 		{
; 0000 0078 			menu_number++;
;PCODE: $000000BF VOL: 0
; 0000 0079 			if (menu_number > 3)
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
; 0000 007A 			{
; 0000 007B 				menu_number = 1;
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
; 0000 007C 			}
; 0000 007D 		}
;PCODE: $000000C5 VOL: 0
; 0000 007E 
; 0000 007F 		if (PIND.1 == 0 && (loop_count % 15 == 0) && task == 0)
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
; 0000 0080 		{
; 0000 0081 			old_menu_number = 4;
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
; 0000 0082 			task = menu_number;
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
; 0000 0083 		}
; 0000 0084 
; 0000 0085 		if (PIND.7 == 1  && (loop_count % 15 == 0))
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
; 0000 0086 		{
; 0000 0087 			n++;
;PCODE: $000000E6 VOL: 0
; 0000 0088 			if (n > 99)
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
; 0000 0089 				n = 0;
;PCODE: $000000EA VOL: 0
; 0000 008A 		}
;PCODE: $000000EB VOL: 0
; 0000 008B 
; 0000 008C         if(task != 0)
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
; 0000 008D         {
; 0000 008E             task_run++;
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
; 0000 008F             switch (task)
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
; 0000 0090             {
; 0000 0091                 case 1:
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
; 0000 0092                     PORTD.4 = 1;
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
; 0000 0093                 case 2:
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
; 0000 0094                     PORTD.5 = 1;
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
; 0000 0095                 case 3:
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
; 0000 0096                     PORTD.6 = 1;
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
; 0000 0097             }
;PCODE: $00000106 VOL: 0
; 0000 0098 
; 0000 0099             if(task_run == 40)
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
; 0000 009A             {
; 0000 009B                 task_run = 0;
;PCODE: $0000010A VOL: 0
; 0000 009C                 task = 0;
;PCODE: $0000010B VOL: 0
; 0000 009D                 PORTD.4 = 0;
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
; 0000 009E                 PORTD.5 = 0;
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
; 0000 009F                 PORTD.6 = 0;
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
; 0000 00A0             }
; 0000 00A1         }
;PCODE: $00000112 VOL: 0
; 0000 00A2 
; 0000 00A3 		loop_count++;
;PCODE: $00000113 VOL: 0
;PCODE: $00000114 VOL: 0
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
; 0000 00A4         delay_ms(25);
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
; 0000 00A5 
; 0000 00A6 	}
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
; 0000 00A7 }
;PCODE: $0000011C VOL: 0
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0

	.DSEG
_0xC:
	.BYTE 0x61
;
;char get_key(void)
; 0000 00AA {

	.CSEG
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
; 0000 00AB 	while (1)
;PCODE: $00000121 VOL: 0
; 0000 00AC 	{
; 0000 00AD 		PORTC.0 = 0;
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
; 0000 00AE 		PORTC.1 = 1;
;PCODE: $00000124 VOL: 0
;PCODE: $00000125 VOL: 0
; 0000 00AF 		PORTC.2 = 1;
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
; 0000 00B0 		PORTC.3 = 1;
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
; 0000 00B1 		if (PINC.4 == 0)
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
;PCODE: $0000012C VOL: 0
; 0000 00B2 		{
; 0000 00B3 			return '1';
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
; 0000 00B4 		}
; 0000 00B5 
; 0000 00B6 		if (PINC.5 == 0)
;PCODE: $0000012F VOL: 0
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
; 0000 00B7 		{
; 0000 00B8 			return '2';
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
; 0000 00B9 		}
; 0000 00BA 
; 0000 00BB 		if (PINC.6 == 0)
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
;PCODE: $00000138 VOL: 0
; 0000 00BC 		{
; 0000 00BD 			return '3';
;PCODE: $00000139 VOL: 0
;PCODE: $0000013A VOL: 0
; 0000 00BE 		}
; 0000 00BF 
; 0000 00C0 		if (PINC.7 == 0)
;PCODE: $0000013B VOL: 0
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
;PCODE: $0000013E VOL: 0
; 0000 00C1 		{
; 0000 00C2 			return 'A';
;PCODE: $0000013F VOL: 0
;PCODE: $00000140 VOL: 0
; 0000 00C3 		}
; 0000 00C4 
; 0000 00C5 		PORTC.0 = 1;
;PCODE: $00000141 VOL: 0
;PCODE: $00000142 VOL: 0
;PCODE: $00000143 VOL: 0
; 0000 00C6 		PORTC.1 = 0;
;PCODE: $00000144 VOL: 0
;PCODE: $00000145 VOL: 0
; 0000 00C7 		PORTC.2 = 1;
;PCODE: $00000146 VOL: 0
;PCODE: $00000147 VOL: 0
; 0000 00C8 		PORTC.3 = 1;
;PCODE: $00000148 VOL: 0
;PCODE: $00000149 VOL: 0
; 0000 00C9 		if (PINC.4 == 0)
;PCODE: $0000014A VOL: 0
;PCODE: $0000014B VOL: 0
;PCODE: $0000014C VOL: 0
; 0000 00CA 		{
; 0000 00CB 			return '4';
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
; 0000 00CC 		}
; 0000 00CD 
; 0000 00CE 		if (PINC.5 == 0)
;PCODE: $0000014F VOL: 0
;PCODE: $00000150 VOL: 0
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 0
; 0000 00CF 		{
; 0000 00D0 			return '5';
;PCODE: $00000153 VOL: 0
;PCODE: $00000154 VOL: 0
; 0000 00D1 		}
; 0000 00D2 
; 0000 00D3 		if (PINC.6 == 0)
;PCODE: $00000155 VOL: 0
;PCODE: $00000156 VOL: 0
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
; 0000 00D4 		{
; 0000 00D5 			return '6';
;PCODE: $00000159 VOL: 0
;PCODE: $0000015A VOL: 0
; 0000 00D6 		}
; 0000 00D7 
; 0000 00D8 		if (PINC.7 == 0)
;PCODE: $0000015B VOL: 0
;PCODE: $0000015C VOL: 0
;PCODE: $0000015D VOL: 0
;PCODE: $0000015E VOL: 0
; 0000 00D9 		{
; 0000 00DA 			return 'B';
;PCODE: $0000015F VOL: 0
;PCODE: $00000160 VOL: 0
; 0000 00DB 		}
; 0000 00DC 
; 0000 00DD 		PORTC.0 = 1;
;PCODE: $00000161 VOL: 0
;PCODE: $00000162 VOL: 0
;PCODE: $00000163 VOL: 0
; 0000 00DE 		PORTC.1 = 1;
;PCODE: $00000164 VOL: 0
;PCODE: $00000165 VOL: 0
; 0000 00DF 		PORTC.2 = 0;
;PCODE: $00000166 VOL: 0
;PCODE: $00000167 VOL: 0
; 0000 00E0 		PORTC.3 = 1;
;PCODE: $00000168 VOL: 0
;PCODE: $00000169 VOL: 0
; 0000 00E1 		if (PINC.4 == 0)
;PCODE: $0000016A VOL: 0
;PCODE: $0000016B VOL: 0
;PCODE: $0000016C VOL: 0
; 0000 00E2 		{
; 0000 00E3 			return '7';
;PCODE: $0000016D VOL: 0
;PCODE: $0000016E VOL: 0
; 0000 00E4 		}
; 0000 00E5 
; 0000 00E6 		if (PINC.5 == 0)
;PCODE: $0000016F VOL: 0
;PCODE: $00000170 VOL: 0
;PCODE: $00000171 VOL: 0
;PCODE: $00000172 VOL: 0
; 0000 00E7 		{
; 0000 00E8 			return '8';
;PCODE: $00000173 VOL: 0
;PCODE: $00000174 VOL: 0
; 0000 00E9 		}
; 0000 00EA 
; 0000 00EB 		if (PINC.6 == 0)
;PCODE: $00000175 VOL: 0
;PCODE: $00000176 VOL: 0
;PCODE: $00000177 VOL: 0
;PCODE: $00000178 VOL: 0
; 0000 00EC 		{
; 0000 00ED 			return '9';
;PCODE: $00000179 VOL: 0
;PCODE: $0000017A VOL: 0
; 0000 00EE 		}
; 0000 00EF 
; 0000 00F0 		if (PINC.7 == 0)
;PCODE: $0000017B VOL: 0
;PCODE: $0000017C VOL: 0
;PCODE: $0000017D VOL: 0
;PCODE: $0000017E VOL: 0
; 0000 00F1 		{
; 0000 00F2 			return 'C';
;PCODE: $0000017F VOL: 0
;PCODE: $00000180 VOL: 0
; 0000 00F3 		}
; 0000 00F4 
; 0000 00F5 		PORTC.0 = 1;
;PCODE: $00000181 VOL: 0
;PCODE: $00000182 VOL: 0
;PCODE: $00000183 VOL: 0
; 0000 00F6 		PORTC.1 = 1;
;PCODE: $00000184 VOL: 0
;PCODE: $00000185 VOL: 0
; 0000 00F7 		PORTC.2 = 1;
;PCODE: $00000186 VOL: 0
;PCODE: $00000187 VOL: 0
; 0000 00F8 		PORTC.3 = 0;
;PCODE: $00000188 VOL: 0
;PCODE: $00000189 VOL: 0
; 0000 00F9 		if (PINC.4 == 0)
;PCODE: $0000018A VOL: 0
;PCODE: $0000018B VOL: 0
;PCODE: $0000018C VOL: 0
; 0000 00FA 		{
; 0000 00FB 			return '*';
;PCODE: $0000018D VOL: 0
;PCODE: $0000018E VOL: 0
; 0000 00FC 		}
; 0000 00FD 
; 0000 00FE 		if (PINC.5 == 0)
;PCODE: $0000018F VOL: 0
;PCODE: $00000190 VOL: 0
;PCODE: $00000191 VOL: 0
;PCODE: $00000192 VOL: 0
; 0000 00FF 		{
; 0000 0100 			return '0';
;PCODE: $00000193 VOL: 0
;PCODE: $00000194 VOL: 0
; 0000 0101 		}
; 0000 0102 
; 0000 0103 		if (PINC.6 == 0)
;PCODE: $00000195 VOL: 0
;PCODE: $00000196 VOL: 0
;PCODE: $00000197 VOL: 0
;PCODE: $00000198 VOL: 0
; 0000 0104 		{
; 0000 0105 			return '#';
;PCODE: $00000199 VOL: 0
;PCODE: $0000019A VOL: 0
; 0000 0106 		}
; 0000 0107 
; 0000 0108 		if (PINC.7 == 0)
;PCODE: $0000019B VOL: 0
;PCODE: $0000019C VOL: 0
;PCODE: $0000019D VOL: 0
;PCODE: $0000019E VOL: 0
; 0000 0109 		{
; 0000 010A 			return 'D';
;PCODE: $0000019F VOL: 0
;PCODE: $000001A0 VOL: 0
; 0000 010B 		}
; 0000 010C 	}
;PCODE: $000001A1 VOL: 0
;PCODE: $000001A2 VOL: 0
;PCODE: $000001A3 VOL: 0
; 0000 010D }
;PCODE: $000001A4 VOL: 0
;PCODE: $000001A5 VOL: 0
;
;unsigned char verify_password()
; 0000 0110 {
;PCODE: $000001A6 VOL: 0
;PCODE: $000001A7 VOL: 0
; 0000 0111 	unsigned char input[4];
; 0000 0112 	char temp;
; 0000 0113 
; 0000 0114 	for (i = 0; i <= 3; i++)
;PCODE: $000001A8 VOL: 0
;PCODE: $000001A9 VOL: 0
;	input -> Y+1
;	temp -> R17
;PCODE: $000001AA VOL: 0
;PCODE: $000001AB VOL: 0
;PCODE: $000001AC VOL: 0
;PCODE: $000001AD VOL: 0
;PCODE: $000001AE VOL: 0
;PCODE: $000001AF VOL: 0
;PCODE: $000001B0 VOL: 0
; 0000 0115 	{
; 0000 0116 		temp = get_key();
;PCODE: $000001B1 VOL: 0
;PCODE: $000001B2 VOL: 0
; 0000 0117 		lcd_putchar(temp);
;PCODE: $000001B3 VOL: 0
;PCODE: $000001B4 VOL: 0
; 0000 0118 		input[i] = temp;
;PCODE: $000001B5 VOL: 0
;PCODE: $000001B6 VOL: 0
;PCODE: $000001B7 VOL: 0
;PCODE: $000001B8 VOL: 0
;PCODE: $000001B9 VOL: 0
; 0000 0119 		delay_ms(500);
;PCODE: $000001BA VOL: 0
;PCODE: $000001BB VOL: 0
; 0000 011A 		if (temp == '*')
;PCODE: $000001BC VOL: 0
;PCODE: $000001BD VOL: 0
;PCODE: $000001BE VOL: 0
; 0000 011B 		{
; 0000 011C 			lcd_clear();
;PCODE: $000001BF VOL: 0
; 0000 011D 			lcd_puts("Enter passwrod: ");
;PCODE: $000001C0 VOL: 0
;PCODE: $000001C1 VOL: 0
;PCODE: $000001C2 VOL: 0
; 0000 011E 			return 2;
;PCODE: $000001C3 VOL: 0
;PCODE: $000001C4 VOL: 0
;PCODE: $000001C5 VOL: 0
;PCODE: $000001C6 VOL: 0
;PCODE: $000001C7 VOL: 0
; 0000 011F 		}
; 0000 0120 	}
;PCODE: $000001C8 VOL: 0
;PCODE: $000001C9 VOL: 0
;PCODE: $000001CA VOL: 0
;PCODE: $000001CB VOL: 0
;PCODE: $000001CC VOL: 0
; 0000 0121 
; 0000 0122 	for (i = 0; i <= 3; i++)
;PCODE: $000001CD VOL: 0
;PCODE: $000001CE VOL: 0
;PCODE: $000001CF VOL: 0
;PCODE: $000001D0 VOL: 0
;PCODE: $000001D1 VOL: 0
;PCODE: $000001D2 VOL: 0
;PCODE: $000001D3 VOL: 0
; 0000 0123 	{
; 0000 0124 		if (input[i] == PASSWORD[i])
;PCODE: $000001D4 VOL: 0
;PCODE: $000001D5 VOL: 0
;PCODE: $000001D6 VOL: 0
;PCODE: $000001D7 VOL: 0
;PCODE: $000001D8 VOL: 0
;PCODE: $000001D9 VOL: 0
;PCODE: $000001DA VOL: 0
;PCODE: $000001DB VOL: 0
;PCODE: $000001DC VOL: 0
;PCODE: $000001DD VOL: 0
;PCODE: $000001DE VOL: 0
; 0000 0125 		{
; 0000 0126 			temp = 1;
;PCODE: $000001DF VOL: 0
;PCODE: $000001E0 VOL: 0
; 0000 0127 		}
; 0000 0128 		else
;PCODE: $000001E1 VOL: 0
;PCODE: $000001E2 VOL: 0
; 0000 0129 		{
; 0000 012A 			temp = 0;
;PCODE: $000001E3 VOL: 0
;PCODE: $000001E4 VOL: 0
; 0000 012B 			return temp;
;PCODE: $000001E5 VOL: 0
;PCODE: $000001E6 VOL: 0
;PCODE: $000001E7 VOL: 0
;PCODE: $000001E8 VOL: 0
;PCODE: $000001E9 VOL: 0
; 0000 012C 		}
;PCODE: $000001EA VOL: 0
; 0000 012D 	}
;PCODE: $000001EB VOL: 0
;PCODE: $000001EC VOL: 0
;PCODE: $000001ED VOL: 0
;PCODE: $000001EE VOL: 0
; 0000 012E 
; 0000 012F 	return temp;
;PCODE: $000001EF VOL: 0
;PCODE: $000001F0 VOL: 0
;PCODE: $000001F1 VOL: 0
;PCODE: $000001F2 VOL: 0
;PCODE: $000001F3 VOL: 0
; 0000 0130 }
;PCODE: $000001F4 VOL: 0

	.DSEG
_0x7D:
	.BYTE 0x11
